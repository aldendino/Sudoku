{"version":3,"sources":["webpack:///./src/data/puzzle1.json","webpack:///./src/App.vue?5ef0","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/data/index.js","webpack:///./src/sudoku/index.js","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?2f02","webpack:///./src/components/Home.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["module","exports","range","puzzle","solution","selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","data_puzzle1","a","partial","func","_len","arguments","length","outerArgs","Array","_key","_len2","innerArgs","_key2","SUDOKU_RANGE","valueInRangeCheck","value","inRange","Error","validValueInRange","is_integer_default","rangeErrorCheck","Math","sqrt","validRange","valueErrorCheck","sudoku_Square","Square","_this","undefined","classCallCheck_default","_range","_value","_original","isOriginal","getRange","getValue","setValue","validate","_Square","SudokuSquare","possibleConstructorReturn_default","__proto__","get_prototype_of_default","call","inherits_default","validStateDataCheck","data","map","row","filter","isEqual","forEach","map2D","functor","createArray2D","array","index","generateSet","arrays","set","element","collateCoords","_ref","column","superSquareRange","superSquare","floor","square","collateSudokuCoords","decollateCoords","_ref2","outerColumn","decollateSudokuCoords","transposeArray2D","transposedArray2D","i","j","collateSuperSquares","superSquares","coords","outerIndex","innerIndex","validSolutionArray","sorted","concat","sort","state","rows","columns","squares","toConsumableArray_default","every","sudoku_SudokuBoard","_SquareBoard","SudokuBoard","SquareBoard","_state","processStateData","getState","stateValues","possibilities","keys","slice","getStateValues","rowValues","columnValues","getStateValuesTransposed","collatedCoords","getStateValuesCollated","possibility","_this3","singleOptions","getPossibleValuesHelper","collated","push","getCoordsInSquare","coord","option","Home","getStateOriginality","currentSquare","board","currentCoords","getPossibleValues","currentSquareAuto","currentCoordsAuto","superSquareCoords","nextAutoSquare","nextMove","interval","nextMoveAuto","components_Home","_vm","staticClass","on","click","_v","startNextMoveAuto","stopNextMoveAuto","resetBoard","directives","name","rawName","expression","type","min","minInterval","max","maxInterval","step","intervalStep","domProps","__r","$event","target","_s","mouseout","_l","grid","key","class","current-auto","isCurrentSquareAuto","relative-auto","isRelativeSquareAuto","current","isCurrentSquare","relative","isRelativeSquare","original","isOriginalSquare","handleClick","mouseover","handleMouseOver","currentPossibilities","join","currentOptions","src_components_Home","Home_normalizeComponent","vue_esm","use","vue_router_esm","router","routes","path","component","config","productionTip","el","components","App","template"],"mappings":"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","file":"static/js/app.adafa510fcd47405586b.js","sourcesContent":["module.exports = {\"range\":9,\"puzzle\":[[4,7,0,0,0,5,0,3,0],[2,9,0,0,0,0,4,0,0],[0,0,8,0,7,0,0,1,0],[0,5,0,0,4,1,3,0,0],[0,0,0,5,0,6,0,0,0],[0,0,9,8,3,0,0,5,0],[0,8,0,0,1,0,5,0,0],[0,0,5,0,0,0,0,6,4],[0,6,0,3,0,0,0,2,7]],\"solution\":[[4,7,1,9,6,5,2,3,8],[2,9,6,1,8,3,4,7,5],[5,3,8,4,7,2,9,1,6],[6,5,7,2,4,1,3,8,9],[8,2,3,5,9,6,7,4,1],[1,4,9,8,3,7,6,5,2],[7,8,2,6,1,4,5,9,3],[3,1,5,7,2,9,8,6,4],[9,6,4,3,5,8,1,2,7]]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/puzzle1.json\n// module id = Cn+M\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-04046563\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-04046563\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04046563\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nhtml, body, #app {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","import p1 from './puzzle1.json'\n\nexport const puzzle1 = p1\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/index.js","\nfunction partial (func, ...outerArgs) {\n  return function (...innerArgs) {\n    return func(...[...outerArgs, ...innerArgs])\n  }\n}\n\nexport const SUDOKU_RANGE = 9\n\nfunction inRange (range, value) {\n  return value >= 0 && value <= range\n}\n\nfunction valueInRangeCheck (range, value) {\n  if (!inRange(range, value)) {\n    throw new Error('Value must be between 0 and the range inclusive.')\n  }\n}\n\nfunction validRange (range) {\n  return Number.isInteger(range) && range > 0 && Math.sqrt(range) % 1 === 0\n}\n\nfunction validValueInRange (range, value) {\n  return (Number.isInteger(value)) && value >= 0 && value <= range\n}\n\nfunction rangeErrorCheck (range) {\n  if (!validRange(range)) {\n    throw new Error('Range must be an integer greater than 0 and a perfect square.')\n  }\n}\n\nfunction valueErrorCheck (range, value) {\n  if (!validValueInRange(range, value)) {\n    throw new Error('Value must be an integer or null and between 1 and the range inclusive.')\n  }\n}\n\nclass Square {\n  constructor (range = SUDOKU_RANGE, value = 0) {\n    rangeErrorCheck(range)\n    if (!validValueInRange(range, value)) {\n      throw new Error('Value must be an integer or null and between 1 and the range inclusive.')\n    }\n\n    let _range = range\n    let _value = value\n    let _original = value !== 0\n\n    this.isOriginal = () => _original\n\n    this.getRange = () => _range\n\n    this.getValue = () => _value\n    this.setValue = (value) => {\n      this.validate(value)\n      _value = value\n    }\n  }\n\n  validate (value) {\n    valueErrorCheck(this.getRange(), value)\n  }\n}\n\nexport class SudokuSquare extends Square {\n  constructor (value = null) {\n    super(SUDOKU_RANGE, value)\n  }\n}\n\nfunction validStateDataCheck (range, data) {\n  if (!(data.length === range)) {\n    throw new Error('Number of rows must equal the range.')\n  }\n  if (data\n    .map(row => row.length === range)\n    .filter(isEqual => !isEqual)\n    .length !== 0\n  ) {\n    throw new Error('Number of elements in each column must equal the range.')\n  }\n  data.forEach(row => {\n    row.forEach(value => {\n      valueErrorCheck(range, value)\n    })\n  })\n}\n\nfunction map2D (data, functor) {\n  return data.map(row => {\n    return row.map(value => {\n      return functor(value)\n    })\n  })\n}\n\nfunction createArray2D (range) {\n  const array = new Array(range)\n  for (let index = 0; index < array.length; index++) {\n    array[index] = new Array(range)\n  }\n  return array\n}\n\nfunction generateSet (arrays) {\n  const set = {}\n  arrays.forEach(array => {\n    array.forEach(element => {\n      set[element] = element\n    })\n  })\n  return set\n}\n\n// function translateCoords (range, { row, column }) {\n//   const splitDim = Math.sqrt(range)\n//   const outerRow = Math.floor(row / splitDim)\n//   const outerColumn = Math.floor(column / splitDim)\n//   const innerRow = row % splitDim\n//   const innerColumn = column % splitDim\n//   return {\n//     outerRow,\n//     outerColumn,\n//     innerRow,\n//     innerColumn\n//   }\n// }\n\n/*\nor = floor(r / ssr)\noc = floor(c / ssr)\nir = r % ssr\nic = c % ssr\nss = or * ssr + oc\ns = ir * ssr + ic\n\nss = floor(r / ssr) * ssr + floor(c / ssr)\ns = (r % ssr) * ssr + (c % ssr)\n*/\nfunction collateCoords (range, { row, column }) {\n  const superSquareRange = Math.sqrt(range)\n  const outerRow = Math.floor(row / superSquareRange)\n  const outerColumn = Math.floor(column / superSquareRange)\n  const innerRow = row % superSquareRange\n  const innerColumn = column % superSquareRange\n  return {\n    superSquare: outerRow * superSquareRange + outerColumn,\n    square: innerRow * superSquareRange + innerColumn\n  }\n}\nexport const collateSudokuCoords = partial(collateCoords, SUDOKU_RANGE)\n\n/*\nor = floor(ss / ssr)\noc = ss % ssr\nir = floor(s / ssr)\nic = s % ssr\nr = or * ssr + ir\nc = oc * ssr + ic\n\nss = floor(r / ssr) * ssr + floor(c / ssr)\ns = (r % ssr) * ssr + (c % ssr)\n*/\nfunction decollateCoords (range, { superSquare, square }) {\n  const superSquareRange = Math.sqrt(range)\n  const outerRow = Math.floor(superSquare / superSquareRange)\n  const outerColumn = superSquare % superSquareRange\n  const innerRow = Math.floor(square / superSquareRange)\n  const innerColumn = square % superSquareRange\n  return {\n    row: outerRow * superSquareRange + innerRow,\n    column: outerColumn * superSquareRange + innerColumn\n  }\n}\nexport const decollateSudokuCoords = partial(decollateCoords, SUDOKU_RANGE)\n\nfunction transposeArray2D (range, data) {\n  const transposedArray2D = createArray2D(range)\n  for (let i = 0; i < data.length; i++) {\n    const row = data[i]\n    for (let j = 0; j < row.length; j++) {\n      const value = row[j]\n      transposedArray2D[j][i] = value\n    }\n  }\n  return transposedArray2D\n}\n\n// function getCoordsInRow (range, row, column) {\n//   const coords = []\n//   for (let index = 0; index < range; index++) {\n//     if (index !== column) {\n//       coords.push({\n//         row,\n//         column: index\n//       })\n//     }\n//   }\n//   return coords\n// }\n\n// function getCoordsInColumn (range, row, column) {\n//   const coords = []\n//   for (let index = 0; index < range; index++) {\n//     if (index !== row) {\n//       coords.push({\n//         row: index,\n//         column\n//       })\n//     }\n//   }\n//   return coords\n// }\n\nfunction getCoordsInSquare (range, row, column) {\n  const collated = collateCoords(range, { row, column })\n  const coords = []\n  for (let index = 0; index < range; index++) {\n    if (index !== collated.square) {\n      coords.push(decollateCoords(range, {\n        superSquare: collated.superSquare,\n        square: index\n      }))\n    }\n  }\n  return coords\n}\n\n// function getRelativeCoords (range, row, column) {\n//   const rowCoords = getCoordsInRow(range, row, column)\n//   const columnCoords = getCoordsInColumn(range, row, column)\n//   const squareCoords = getCoordsInSquare(range, row, column)\n\n//   const coordsSet = {}\n//   const coordsArray = [\n//     ...rowCoords,\n//     ...columnCoords,\n//     ...squareCoords\n//   ]\n//   coordsArray.forEach(coord => {\n//     coordsSet[`${coord.row}:${coord.column}`] = coord\n//   })\n//   return Object.values(coordsSet)\n// }\n\nfunction collateSuperSquares (range, data) {\n  const superSquares = createArray2D(range)\n  // const superSquareDim = Math.sqrt(range)\n  for (let i = 0; i < data.length; i++) {\n    const row = data[i]\n    for (let j = 0; j < row.length; j++) {\n      const value = row[j]\n      // const coords = translateCoords(range, {row: i, column: j})\n      // const outerIndex = coords.outerRow * superSquareDim + coords.outerColumn\n      // const innerIndex = coords.innerRow * superSquareDim + coords.innerColumn\n      const coords = collateCoords(range, { row: i, column: j })\n      const outerIndex = coords.superSquare\n      const innerIndex = coords.square\n      superSquares[outerIndex][innerIndex] = value\n    }\n  }\n  return superSquares\n}\n\nexport function collateSudoku (state) {\n  // const data = map2D(state, (value) => value.getValue())\n  return collateSuperSquares(SUDOKU_RANGE, state)\n}\n\nfunction processStateData (range, data) {\n  validStateDataCheck(range, data)\n\n  return map2D(data, (value) => new Square(range, value))\n}\n\nfunction validSolutionArray (range, array) {\n  const sorted = array.concat.sort()\n  for (let index = range; index > 0; index--) {\n    const element = sorted[index]\n    if (element !== index) return false\n  }\n  return true\n}\n\nfunction verifySolution (range, state) {\n  const rows = state\n  const columns = transposeArray2D(range, state)\n  const squares = collateSuperSquares(range, state)\n\n  const arrays = [\n    ...rows,\n    ...columns,\n    ...squares\n  ]\n  return arrays.every(partial(validSolutionArray, range))\n}\n\nexport const verifySudokuSolution = partial(verifySolution, SUDOKU_RANGE)\n\nclass SquareBoard {\n  constructor (range = SUDOKU_RANGE, state) {\n    rangeErrorCheck(range)\n    validStateDataCheck(range, state)\n    // if (!validStateData(range, state)) {\n    //   throw new Error('State must consist of a doubly-nested array of range by range dimensions, with each value between 0 and the range inclusive.')\n    // }\n\n    let _range = range\n    let _state = processStateData(range, state)\n    this.getRange = () => _range\n    this.getState = () => _state\n    this.stateValues = map2D(_state, (value) => value.getValue())\n\n    this.possibilities = [...Array(range + 1).keys()].slice(1)\n  }\n\n  getStateValues () {\n    return map2D(this.getState(), (value) => value.getValue())\n  }\n\n  getStateOriginality () {\n    return map2D(this.getState(), (value) => value.isOriginal())\n  }\n\n  getStateValuesTransposed () {\n    return transposeArray2D(this.getRange(), this.getStateValues())\n  }\n\n  getStateValuesCollated () {\n    return collateSuperSquares(this.getRange(), this.getStateValues())\n  }\n\n  setIndex (row, column, value) {\n    valueInRangeCheck(this.getRange(), row)\n    valueInRangeCheck(this.getRange(), column)\n\n    this.getState()[row][column].setValue(value)\n    this.stateValues = map2D(this.getState(), (value) => value.getValue())\n  }\n\n  getPossibleValuesHelper (row, column) {\n    const stateValues = this.getStateValues()\n    if (stateValues[row][column] !== 0) return []\n    else {\n      const rowValues = stateValues[row]\n      const columnValues = this.getStateValuesTransposed()[column]\n      const collatedCoords = collateSudokuCoords({row, column})\n      const squareValues = this.getStateValuesCollated()[collatedCoords.superSquare]\n\n      const possibilities = generateSet([\n        rowValues,\n        columnValues,\n        squareValues\n      ].map(array => array.filter(element => element !== 0)))\n      const options = this.possibilities.filter(possibility => {\n        return !possibilities[possibility]\n      })\n      return options\n    }\n  }\n\n  getPossibleValues (row, column) {\n    const singleOptions = this.getPossibleValuesHelper(row, column)\n\n    if (singleOptions.length === 0 || singleOptions.length === 1) return singleOptions\n\n    const relativeCoords = getCoordsInSquare(this.getRange(), row, column)\n    const relativeOptions = relativeCoords.map(coord => {\n      return this.getPossibleValuesHelper(coord.row, coord.column)\n    })\n\n    const possibilities = generateSet(relativeOptions)\n\n    // if (Object.values(possibilities).length !== this.getRange() - 1) return []\n\n    const options = singleOptions.filter(option => {\n      return !possibilities[option]\n    })\n    return options\n  }\n}\n\nexport class SudokuBoard extends SquareBoard {\n  constructor (state) {\n    super(SUDOKU_RANGE, state)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sudoku/index.js","<template>\n  <div class=\"page-center\">\n    <!-- <div class=\"sudoku-board\">\n      <div class=\"sudoku-square\" v-for=\"(square, index) in stateFlat\" :key=\"index\">\n        {{ square !== 0 ? square : ' ' }}\n      </div>\n    </div> -->\n    <div class=\"hud hud-top hud-controls\">\n      <button @click=\"nextMove\">manual</button>\n      <button @click=\"startNextMoveAuto\">start</button>\n      <button @click=\"stopNextMoveAuto\">stop</button>\n      <button @click=\"resetBoard\">reset</button>\n      <input type=\"range\" :min=\"minInterval\" :max=\"maxInterval\" :step=\"intervalStep\" v-model=\"interval\"/>\n      <div>{{ currentSquareAuto != null ? currentSquareAuto.row + ':' + currentSquareAuto.column : '' }}</div>\n    </div>\n    <div class=\"sudoku-board sudoku-grid\" @mouseout=\"currentSquare = null\">\n      <div class=\"sudoku-grid\" v-for=\"(grid, i) in stateCollated\" :key=\"i\">\n        <div class=\"sudoku-square\" v-for=\"(square, j) in grid\" :key=\"j\"\n          @click=\"handleClick({ superSquare: i, square: j })\"\n          @mouseover=\"handleMouseOver({ superSquare: i, square: j })\"\n          :class=\"{\n            'current-auto': isCurrentSquareAuto({ superSquare: i, square: j }),\n            'relative-auto': isRelativeSquareAuto({ superSquare: i, square: j }),\n            current: isCurrentSquare({ superSquare: i, square: j }),\n            relative: isRelativeSquare({ superSquare: i, square: j }),\n            original: isOriginalSquare({ superSquare: i, square: j })\n          }\"\n          >\n          {{ square !== 0 ? square : ' ' }}\n        </div>\n      </div>\n    </div>\n    <div class=\"hud hud-bottom hud-answers\">\n      {{ '[' + currentPossibilities.join(', ') + '] => [' }}<span class=\"answer\">{{ currentOptions.join(', ') }}</span>{{ ']' }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { puzzle1 } from '@/data'\nimport { SudokuBoard, collateSudokuCoords, decollateSudokuCoords, collateSudoku, SUDOKU_RANGE } from '@/sudoku'\nimport { flatten } from 'lodash/array'\n\nexport default {\n  data () {\n    return {\n      board: new SudokuBoard(puzzle1.puzzle),\n      currentSquare: null,\n      currentSquareAuto: null,\n      auto: false,\n      interval: 100,\n      minInterval: 0,\n      maxInterval: 1000,\n      intervalStep: 25\n    }\n  },\n  computed: {\n    state () {\n      // return this.board.getStateValues()\n      return this.board.stateValues\n    },\n    originality () {\n      return this.board.getStateOriginality()\n    },\n    stateFlat () {\n      return flatten(this.state)\n    },\n    stateTransposed () {\n      return this.board.getStateValuesTransposed()\n    },\n    stateCollated () {\n      // return this.board.getStateValuesCollated()\n      return collateSudoku(this.state)\n    },\n    currentCoords () {\n      if (this.currentSquare == null) return null\n      else return decollateSudokuCoords(this.currentSquare)\n    },\n    currentPossibilities () {\n      if (this.currentCoords == null) return []\n      else return this.board.getPossibleValuesHelper(this.currentCoords.row, this.currentCoords.column)\n    },\n    currentOptions () {\n      if (this.currentCoords == null) return []\n      else return this.board.getPossibleValues(this.currentCoords.row, this.currentCoords.column)\n    },\n    currentCoordsAuto () {\n      if (this.currentSquareAuto == null) return null\n      else return this.currentSquareAuto\n    },\n    currentPossibilitiesAuto () {\n      if (this.currentCoordsAuto == null) return []\n      else return this.board.getPossibleValuesHelper(this.currentCoordsAuto.row, this.currentCoordsAuto.column)\n    },\n    currentOptionsAuto () {\n      if (this.currentCoordsAuto == null) return []\n      else return this.board.getPossibleValues(this.currentCoordsAuto.row, this.currentCoordsAuto.column)\n    },\n    nextAutoSquare () {\n      if (this.currentSquareAuto == null) return { row: 0, column: 0 }\n      else {\n        let row = this.currentSquareAuto.row\n        const column = (this.currentSquareAuto.column + 1) % SUDOKU_RANGE\n        if (column === 0) {\n          row = (this.currentSquareAuto.row + 1) % SUDOKU_RANGE\n        }\n        return {\n          row,\n          column\n        }\n      }\n    },\n    complete () {\n      return this.state.reduce((acc, val) => {\n        return acc && val.reduce((acc, val) => {\n          return acc && val !== 0\n        })\n      })\n    }\n  },\n  methods: {\n    handleClick (superSquareCoords) {\n      const coords = decollateSudokuCoords(superSquareCoords)\n      if (this.currentOptions && this.currentOptions.length === 1) {\n        let row = coords.row\n        let column = coords.column\n        let value = this.currentOptions[0]\n        this.board.setIndex(row, column, value)\n        // console.log(`Set: ${row}:${column} = ${value}`)\n      }\n    },\n    handleMoveAuto (coords) {\n      if (this.currentOptionsAuto && this.currentOptionsAuto.length === 1) {\n        let row = coords.row\n        let column = coords.column\n        let value = this.currentOptionsAuto[0]\n        this.board.setIndex(row, column, value)\n        // console.log(`Set: ${row}:${column} = ${value}`)\n      }\n    },\n    setCurrentSquare (superSquareCoords) {\n      this.currentSquare = superSquareCoords\n    },\n    isCurrentSquare (superSquareCoords) {\n      if (this.currentSquare == null) return false\n      else {\n        const currentCoords = decollateSudokuCoords(this.currentSquare)\n        const coords = decollateSudokuCoords(superSquareCoords)\n        return currentCoords.row === coords.row &&\n          currentCoords.column === coords.column\n      }\n    },\n    isCurrentSquareAuto (superSquareCoords) {\n      if (this.currentSquareAuto == null) return false\n      else {\n        const currentCoords = this.currentSquareAuto // decollateSudokuCoords(this.currentSquareAuto)\n        const coords = decollateSudokuCoords(superSquareCoords)\n        return currentCoords.row === coords.row &&\n          currentCoords.column === coords.column\n      }\n    },\n    isRelativeSquare (superSquareCoords) {\n      if (this.currentSquare == null) return false\n      else {\n        const currentCoords = decollateSudokuCoords(this.currentSquare)\n        const coords = decollateSudokuCoords(superSquareCoords)\n        return (this.currentSquare.superSquare === superSquareCoords.superSquare ||\n          currentCoords.row === coords.row ||\n          currentCoords.column === coords.column) &&\n          !(currentCoords.row === coords.row &&\n          currentCoords.column === coords.column)\n      }\n    },\n    isRelativeSquareAuto (superSquareCoords) {\n      if (this.currentSquareAuto == null) return false\n      else {\n        const currentCoords = this.currentSquareAuto // decollateSudokuCoords(this.currentSquareAuto)\n        const collatedCoords = collateSudokuCoords(this.currentSquareAuto)\n        const coords = decollateSudokuCoords(superSquareCoords)\n        return (collatedCoords.superSquare === superSquareCoords.superSquare ||\n          currentCoords.row === coords.row ||\n          currentCoords.column === coords.column) &&\n          !(currentCoords.row === coords.row &&\n          currentCoords.column === coords.column)\n      }\n    },\n    isOriginalSquare (superSquareCoords) {\n      const coords = decollateSudokuCoords(superSquareCoords)\n      return this.originality[coords.row][coords.column]\n    },\n    handleMouseOver (superSquareCoords) {\n      this.setCurrentSquare(superSquareCoords)\n    },\n    nextMove () {\n      if (this.currentSquareAuto) {\n        this.handleMoveAuto(this.currentSquareAuto)\n      }\n      this.currentSquareAuto = this.nextAutoSquare\n      // if (this.currentSquareAuto == null) this.currentSquareAuto = { row: 0, column: 0 }\n      // else {\n      //   let row = this.currentSquareAuto.row\n      //   const column = (this.currentSquareAuto.column + 1) % SUDOKU_RANGE\n      //   if (column === 0) {\n      //     row = (this.currentSquareAuto.row + 1) % SUDOKU_RANGE\n      //   }\n      //   this.currentSquareAuto = {\n      //     row,\n      //     column\n      //   }\n      // }\n    },\n    nextMoveAuto () {\n      if (this.auto && !this.complete) {\n        this.nextMove()\n        setTimeout(this.nextMoveAuto, this.interval)\n      }\n    },\n    startNextMoveAuto () {\n      this.auto = true\n      this.nextMoveAuto()\n    },\n    stopNextMoveAuto () {\n      this.auto = false\n    },\n    resetBoard () {\n      this.auto = false\n      this.currentSquareAuto = null\n      this.board = new SudokuBoard(puzzle1.puzzle)\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.page-center\n  width 100%\n  height 100%\n  display flex\n  justify-content center\n  align-items center\n  position relative\n\n.sudoku-board\n  border 1px solid black\n\n.sudoku-grid\n  display inline-grid\n  grid-template-columns repeat(3, 1fr)\n  grid-gap 0\n  font-size 25px\n  border 1px solid black\n\n.sudoku-square\n  dim = 50px\n  width dim\n  height dim\n  border 1px solid black\n  display flex\n  justify-content center\n  align-items center\n  box-sizing border-box\n  cursor pointer\n  &.current\n    background blue\n    color white\n  &.relative\n    background lightblue\n  &.original\n    font-weight bold\n    color blue\n    &.current\n      color lightblue\n  &.current-auto\n    background green\n    color white\n  &.relative-auto\n    background lightgreen\n  &.original\n    &.current-auto\n      color lightgreen\n\n.hud\n  position absolute\n  padding 10px\n  box-sizing border-box\n\n.hud-bottom\n  bottom 0\n  left 50%\n  transform translateX(-50%)\n  border-radius 10px 10px 0 0\n\n.hud-answers\n  background red\n  color pink\n  font-size 25px\n  .answer\n    font-weight bold\n    color white\n\n.hud-top\n  top 0\n  left 50%\n  transform translateX(-50%)\n  border-radius 0 0 10px 10px\n\n.hud-controls\n  background lightblue\n  color blue\n  font-size 25px\n  display flex\n  align-items baseline\n  button\n    background blue\n    color white\n    font-size inherit\n    border-radius 4px\n    margin 5px\n    &:hover\n      background darkblue\n\n// .sudoku-board\n//   display inline-grid\n//   grid-template-columns repeat(9, 1fr)\n//   grid-gap 0\n//   font-size 25px\n//   border 1px solid black\n//   .sudoku-square\n//     dim = 50px\n//     width dim\n//     height dim\n//     border 1px solid black\n//     display flex\n//     justify-content center\n//     align-items center\n//     box-sizing border-box\n//     // &:nth-child(3n - 2)\n//     //   border-left 2px\n//     //   background red\n//     &:nth-child(3n)\n//       background green\n//       border-right 2px solid black\n//     &:nth-child(3n + 1)\n//       background blue\n//       border-left 2px solid black\n//     &:nth-child(27n)\n//       background red\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-center\"},[_c('div',{staticClass:\"hud hud-top hud-controls\"},[_c('button',{on:{\"click\":_vm.nextMove}},[_vm._v(\"manual\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.startNextMoveAuto}},[_vm._v(\"start\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.stopNextMoveAuto}},[_vm._v(\"stop\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.resetBoard}},[_vm._v(\"reset\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.interval),expression:\"interval\"}],attrs:{\"type\":\"range\",\"min\":_vm.minInterval,\"max\":_vm.maxInterval,\"step\":_vm.intervalStep},domProps:{\"value\":(_vm.interval)},on:{\"__r\":function($event){_vm.interval=$event.target.value}}}),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(_vm.currentSquareAuto != null ? _vm.currentSquareAuto.row + ':' + _vm.currentSquareAuto.column : ''))])]),_vm._v(\" \"),_c('div',{staticClass:\"sudoku-board sudoku-grid\",on:{\"mouseout\":function($event){_vm.currentSquare = null}}},_vm._l((_vm.stateCollated),function(grid,i){return _c('div',{key:i,staticClass:\"sudoku-grid\"},_vm._l((grid),function(square,j){return _c('div',{key:j,staticClass:\"sudoku-square\",class:{\n          'current-auto': _vm.isCurrentSquareAuto({ superSquare: i, square: j }),\n          'relative-auto': _vm.isRelativeSquareAuto({ superSquare: i, square: j }),\n          current: _vm.isCurrentSquare({ superSquare: i, square: j }),\n          relative: _vm.isRelativeSquare({ superSquare: i, square: j }),\n          original: _vm.isOriginalSquare({ superSquare: i, square: j })\n        },on:{\"click\":function($event){_vm.handleClick({ superSquare: i, square: j })},\"mouseover\":function($event){_vm.handleMouseOver({ superSquare: i, square: j })}}},[_vm._v(\"\\n        \"+_vm._s(square !== 0 ? square : ' ')+\"\\n      \")])}))})),_vm._v(\" \"),_c('div',{staticClass:\"hud hud-bottom hud-answers\"},[_vm._v(\"\\n    \"+_vm._s('[' + _vm.currentPossibilities.join(', ') + '] => [')),_c('span',{staticClass:\"answer\"},[_vm._v(_vm._s(_vm.currentOptions.join(', ')))]),_vm._v(_vm._s(']')+\"\\n  \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5e22fc4d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5e22fc4d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5e22fc4d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5e22fc4d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from '@/components/Home'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Home\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}